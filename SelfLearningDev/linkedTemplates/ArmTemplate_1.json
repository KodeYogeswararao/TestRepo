{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SelfLearningDev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedTextSource_1",
								"type": "DatasetReference"
							},
							"name": "DelimitedText",
							"description": "DelimitedText"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedTextSink_1",
								"type": "DatasetReference"
							},
							"name": "DelimitedOutput",
							"description": "DelimitedOutput"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          outlook as string,",
						"          temperature as string,",
						"          humidity as string,",
						"          windy as string,",
						"          play as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DelimitedText",
						"DelimitedText sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> DelimitedOutput"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onprem_sql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "user_name",
						"type": "nvarchar"
					},
					{
						"name": "emp_code",
						"type": "nvarchar"
					},
					{
						"name": "user_dept",
						"type": "nvarchar"
					},
					{
						"name": "project_index",
						"type": "nvarchar"
					},
					{
						"name": "assignment_type",
						"type": "nvarchar"
					},
					{
						"name": "date_key",
						"type": "nvarchar"
					},
					{
						"name": "available_hours_for_month",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "client_name",
						"type": "nvarchar"
					},
					{
						"name": "project",
						"type": "nvarchar"
					},
					{
						"name": "billable_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "non_billable_reserved_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "non_billable_onboarding_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "non_billable_internal_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "non_billable_shadow_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "non_billable_project_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "non_billable_opportunity_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "total_non_billable_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "opportunity_billable_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "leave_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "balance_hours",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "project_type",
						"type": "nvarchar"
					},
					{
						"name": "contract_number",
						"type": "nvarchar"
					},
					{
						"name": "__FileName",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "APIdata_Staging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Pipeline_01072023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DelimitedText": {},
									"DelimitedOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_Pipeline_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow_1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DelimitedText": {},
									"DelimitedOutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Pipeline_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Practice_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DeleteDataset_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demoonprem-sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ApiData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ApiData1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ApiData')]"
			]
		}
	]
}